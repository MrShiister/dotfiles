"------------------"
" Set up the looks "
"------------------"

set nu rnu
set hlsearch incsearch
set laststatus=2

set t_Co=256

" These need to come before highlight settings
colorscheme desert
syntax on

set statusline=
set statusline+=%1*\ %<%n\ \ %*									" buffer number
set statusline+=%2*%f\ %*										" relative path
set statusline+=%h%#signcolumn#%m%*%2*%r						" flags
set statusline+=%#warningmsg#%{&ff!='unix'?'['.&ff.']':''}%*	" show file format if not unix
set statusline+=%3*\ [e:%{&fenc!=''?&fenc:'none'}]\ %=%k%*		" file encoding
set statusline+=%4*%{v:register}\ \ %*							" active register
set statusline+=%5*\ L:%l/%L\ \ C:%c%V\ %*						" cursor pos

" Change Highlight Colours for cterm
" For statusline
highlight User1 ctermfg=27  ctermbg=250 cterm=bold guifg=#005fff guibg=#bcbcbc gui=bold
highlight User2 ctermfg=22  ctermbg=250            guifg=#005f00 guibg=#bcbcbc
highlight User3 ctermfg=88  ctermbg=250            guifg=#870000 guibg=#bcbcbc
highlight User4 ctermfg=127 ctermbg=250            guifg=#af00af guibg=#bcbcbc
highlight User5 ctermfg=99  ctermbg=250            guifg=#875fff guibg=#bcbcbc

" For vimdiff
highlight DiffChange ctermbg=238                        guibg=#444444
highlight DiffText   ctermbg=220             cterm=bold guibg=#ffd700               gui=bold
highlight DiffAdd    ctermbg=53                         guibg=#5f005f
highlight DiffDelete ctermbg=53  ctermfg=22  cterm=bold guibg=#5f005f guifg=#005f00 gui=bold

highlight NonText    ctermfg=39  guifg=#00afff

set smartindent
set tabstop=4
set shiftwidth=4

set backspace=2
set ruler
set scrolloff=4

set modeline

set tabpagemax=100

" Show tab number on the tabline
if exists("+showtabline")
	function! MyTabLine()
		let s = ''
		let t = tabpagenr()
		let i = 1
		while i <= tabpagenr('$')
			let buflist = tabpagebuflist(i)
			let winnr = tabpagewinnr(i)
			let s .= '%' . i . 'T'
			let s .= (i == t ? '%1*' : '%2*')
			let s .= ' '
			let s .= i
			"let s .= i . ']'
			"let s .= winnr . '/' . tabpagewinnr(i,'$')
			let s .= ' %*'
			let s .= (i == t ? '%#TabLineSel#' : '%#TabLine#')
			let file = bufname(buflist[winnr - 1])
			let file = fnamemodify(file, ':p:t')
			if file == ''
				let file = '[No Name]'
			endif
			let s .= file
   		 if getbufvar(buflist[winnr - 1], "&modified")
   			 let s .= '[+]'
   		 endif
			let i = i + 1
		endwhile
		let s .= '%T%#TabLineFill#%='
		let s .= (tabpagenr('$') > 1 ? '%999XX' : 'X')
		return s
	endfunction
	set stal=2
	set tabline=%!MyTabLine()
endif


"---------"
" General "
"---------"

let mapleader = ","
let maplocalleader = ","

nnoremap <leader>dd :w<cr>
nnoremap <leader>nn :setlocal number! rnu!<cr>
nnoremap <leader>aa :noh<cr>
nnoremap <leader>ro :setlocal ro noma noswapfile<cr>
nnoremap \\ :Explore<cr>
nnoremap <leader>ls :echo globpath('.','*')<cr>
nnoremap <F5> :e!<cr>G:echom "Forced reload file."<cr>
nnoremap Q <Nop>

" Edit your vimrc quickly
nnoremap <leader>ev :vsp $MYVIMRC<cr>
nnoremap <leader>sv :source $MYVIMRC<cr>
nnoremap <leader>eb :vsp $MYGVIMRC<cr>
nnoremap <leader>sb :source $MYGVIMRC<cr>

" Exit insert mode
inoremap jk <esc>

" Always open splits on right/bottom
set splitright
set splitbelow

" Include '^' as a valid filename character
set isfname+=^

" Run vim command on line
nnoremap <buffer> <localleader>rr ^v$h"ly:<c-r>l<cr>

" Easier split navigations
nnoremap <localleader>ww <C-W><C-W>
nnoremap <localleader>wt <C-W>T
nnoremap <localleader>wj <C-W><C-J>
nnoremap <localleader>wk <C-W><C-K>
nnoremap <localleader>wl <C-W><C-L>
nnoremap <localleader>wh <C-W><C-H>

" bash-support variables
let g:BASH_MapLeader = ","

"-----------------------"
" Shortcuts for Editing "
"-----------------------"

set nrformats=hex,alpha

" Search for WORD/word under cursor
nnoremap <leader>ff yiW/\V<c-r>"<cr>
nnoremap <leader>wf yiw/\V<c-r>"<cr>
vnoremap <leader>ff y/\V<c-r>"<cr>

" Brackets Operators
onoremap { i{
onoremap ` i`
onoremap " i"
onoremap [ i[
onoremap ' i'
onoremap ( i(

nnoremap <leader>dt :windo diffthis<cr>
nnoremap <leader>do :windo diffoff<cr>


"-----------------------------------"
" Shortcuts for Specific File Types "
"-----------------------------------"

filetype plugin on
augroup python
	autocmd!
	" Convert tabs into spaces
	autocmd FileType py set tabstop=4 shiftwidth=4 expandtab
augroup END


"-----------"
" Functions "
"-----------"

function! Interleave(start, end, where)
    if a:start < a:where
        for i in range(0, a:end - a:start)
            execute a:start . 'm' . (a:where + i)
        endfor
    else
        for i in range(a:end - a:start, 0, -1)
            execute a:end . 'm' . (a:where + i)
        endfor
    endif
endfunction
